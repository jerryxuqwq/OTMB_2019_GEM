////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 1.12
//  \   \         Application : Virtex-6 FPGA GTX Transceiver Wizard 
//  /   /         Filename : GTX_GEM_RX_top.v
// /___/   /\      
// \   \  /  \ 
//  \___\/\___\ 
//
//
// Module GTX_GEM_RX_top
// Generated by Xilinx Virtex-6 FPGA GTX Transceiver Wizard
// 
// 
// (c) Copyright 2009-2011 Xilinx, Inc. All rights reserved.
// 
// This file contains confidential and proprietary information
// of Xilinx, Inc. and is protected under U.S. and
// international copyright and other intellectual property
// laws.
// 
// DISCLAIMER
// This disclaimer is not a license and does not grant any
// rights to the materials distributed herewith. Except as
// otherwise provided in a valid license issued to you by
// Xilinx, and to the maximum extent permitted by applicable
// law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
// WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
// AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
// BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
// INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
// (2) Xilinx shall not be liable (whether in contract or tort,
// including negligence, or under any other theory of
// liability) for any loss or damage of any kind or nature
// related to, arising under or in connection with these
// materials, including for any direct, or any indirect,
// special, incidental, or consequential loss or damage
// (including loss of data, profits, goodwill, or any type of
// loss or damage suffered as a result of any action brought
// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the
// possibility of the same.
// 
// CRITICAL APPLICATIONS
// Xilinx products are not designed or intended to be fail-
// safe, or for use in any application requiring fail-safe
// performance, such as life-support or safety devices or
// systems, Class III medical devices, nuclear facilities,
// applications related to the deployment of airbags, or any
// other applications that could lead to death, personal
// injury, or severe property or environmental damage
// (individually and collectively, "Critical
// Applications"). Customer assumes the sole risk and
// liability of any use of Xilinx products in Critical
// Applications, subject only to applicable laws and
// regulations governing limitations on product liability.
// 
// THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
// PART OF THIS FILE AT ALL TIMES. 


`timescale 1ns / 1ps
`define DLY #1


//***********************************Entity Declaration************************

module Top #
(
    parameter EXAMPLE_SIM_GTXRESET_SPEEDUP              =   1    // simulation setting for GTX SecureIP model
)
(
    input wire  Q1_CLK1_MGTREFCLK_PAD_N_IN,
    input wire  Q1_CLK1_MGTREFCLK_PAD_P_IN,
    input wire  Q4_CLK1_MGTREFCLK_PAD_N_IN,
    input wire  Q4_CLK1_MGTREFCLK_PAD_P_IN,
    input wire  GTXTXRESET_IN,
    input wire  GTXRXRESET_IN,
    input  wire [10:0]  RXN_IN,
    input  wire [10:0]  RXP_IN,
    output wire [10:0]  TXN_OUT,
    output wire [10:0]  TXP_OUT
);


//************************** Register Declarations ****************************

// * max_fanout = 1 *
    reg             gtx0_rxresetdone_i_r;
    reg             gtx0_rxresetdone_r;
    reg             gtx0_rxresetdone_r2;
    reg             gtx0_rxresetdone_r3;
// * max_fanout = 1 *
    reg             gtx1_rxresetdone_i_r;
    reg             gtx1_rxresetdone_r;
    reg             gtx1_rxresetdone_r2;
    reg             gtx1_rxresetdone_r3;
// * max_fanout = 1 *
    reg             gtx2_rxresetdone_i_r;
    reg             gtx2_rxresetdone_r;
    reg             gtx2_rxresetdone_r2;
    reg             gtx2_rxresetdone_r3;
// * max_fanout = 1 *
    reg             gtx3_rxresetdone_i_r;
    reg             gtx3_rxresetdone_r;
    reg             gtx3_rxresetdone_r2;
    reg             gtx3_rxresetdone_r3;
// * max_fanout = 1 *
    reg             gtx4_rxresetdone_i_r;
    reg             gtx4_rxresetdone_r;
    reg             gtx4_rxresetdone_r2;
    reg             gtx4_rxresetdone_r3;
// * max_fanout = 1 *
    reg             gtx5_rxresetdone_i_r;
    reg             gtx5_rxresetdone_r;
    reg             gtx5_rxresetdone_r2;
    reg             gtx5_rxresetdone_r3;
// * max_fanout = 1 *
    reg             gtx6_rxresetdone_i_r;
    reg             gtx6_rxresetdone_r;
    reg             gtx6_rxresetdone_r2;
    reg             gtx6_rxresetdone_r3;
// * max_fanout = 1 *
    reg             gtx7_rxresetdone_i_r;
    reg             gtx7_rxresetdone_r;
    reg             gtx7_rxresetdone_r2;
    reg             gtx7_rxresetdone_r3;
// * max_fanout = 1 *
    reg             gtx8_rxresetdone_i_r;
    reg             gtx8_rxresetdone_r;
    reg             gtx8_rxresetdone_r2;
    reg             gtx8_rxresetdone_r3;
// * max_fanout = 1 *
    reg             gtx9_rxresetdone_i_r;
    reg             gtx9_rxresetdone_r;
    reg             gtx9_rxresetdone_r2;
    reg             gtx9_rxresetdone_r3;
// * max_fanout = 1 *
    reg             gtx10_rxresetdone_i_r;
    reg             gtx10_rxresetdone_r;
    reg             gtx10_rxresetdone_r2;
    reg             gtx10_rxresetdone_r3;
    //------------------------ MGT Wrapper Wires ------------------------------
    //________________________________________________________________________
    //________________________________________________________________________
    //GTX0   (X0Y5)

    //----------------- Receive Ports - RX Data Path interface -----------------
    wire    [19:0]  gtx0_rxdata_i;
    wire            gtx0_rxrecclk_i;
    //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    wire    [2:0]   gtx0_rxeqmix_i;
    //---------------------- Receive Ports - RX PLL Ports ----------------------
    wire            gtx0_gtxrxreset_i;
    wire            gtx0_pllrxreset_i;
    wire            gtx0_rxplllkdet_i;
    wire            gtx0_rxresetdone_i;


    //________________________________________________________________________
    //________________________________________________________________________
    //GTX1   (X0Y6)

    //----------------- Receive Ports - RX Data Path interface -----------------
    wire    [19:0]  gtx1_rxdata_i;
    wire            gtx1_rxrecclk_i;
    //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    wire    [2:0]   gtx1_rxeqmix_i;
    //---------------------- Receive Ports - RX PLL Ports ----------------------
    wire            gtx1_gtxrxreset_i;
    wire            gtx1_pllrxreset_i;
    wire            gtx1_rxplllkdet_i;
    wire            gtx1_rxresetdone_i;


    //________________________________________________________________________
    //________________________________________________________________________
    //GTX2   (X0Y7)

    //----------------- Receive Ports - RX Data Path interface -----------------
    wire    [19:0]  gtx2_rxdata_i;
    wire            gtx2_rxrecclk_i;
    //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    wire    [2:0]   gtx2_rxeqmix_i;
    //---------------------- Receive Ports - RX PLL Ports ----------------------
    wire            gtx2_gtxrxreset_i;
    wire            gtx2_pllrxreset_i;
    wire            gtx2_rxplllkdet_i;
    wire            gtx2_rxresetdone_i;


    //________________________________________________________________________
    //________________________________________________________________________
    //GTX3   (X0Y8)

    //----------------- Receive Ports - RX Data Path interface -----------------
    wire    [19:0]  gtx3_rxdata_i;
    wire            gtx3_rxrecclk_i;
    //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    wire    [2:0]   gtx3_rxeqmix_i;
    //---------------------- Receive Ports - RX PLL Ports ----------------------
    wire            gtx3_gtxrxreset_i;
    wire            gtx3_pllrxreset_i;
    wire            gtx3_rxplllkdet_i;
    wire            gtx3_rxresetdone_i;


    //________________________________________________________________________
    //________________________________________________________________________
    //GTX4   (X0Y9)

    //----------------- Receive Ports - RX Data Path interface -----------------
    wire    [19:0]  gtx4_rxdata_i;
    wire            gtx4_rxrecclk_i;
    //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    wire    [2:0]   gtx4_rxeqmix_i;
    //---------------------- Receive Ports - RX PLL Ports ----------------------
    wire            gtx4_gtxrxreset_i;
    wire            gtx4_pllrxreset_i;
    wire            gtx4_rxplllkdet_i;
    wire            gtx4_rxresetdone_i;


    //________________________________________________________________________
    //________________________________________________________________________
    //GTX5   (X0Y10)

    //----------------- Receive Ports - RX Data Path interface -----------------
    wire    [19:0]  gtx5_rxdata_i;
    wire            gtx5_rxrecclk_i;
    //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    wire    [2:0]   gtx5_rxeqmix_i;
    //---------------------- Receive Ports - RX PLL Ports ----------------------
    wire            gtx5_gtxrxreset_i;
    wire            gtx5_pllrxreset_i;
    wire            gtx5_rxplllkdet_i;
    wire            gtx5_rxresetdone_i;


    //________________________________________________________________________
    //________________________________________________________________________
    //GTX6   (X0Y11)

    //----------------- Receive Ports - RX Data Path interface -----------------
    wire    [19:0]  gtx6_rxdata_i;
    wire            gtx6_rxrecclk_i;
    //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    wire    [2:0]   gtx6_rxeqmix_i;
    //---------------------- Receive Ports - RX PLL Ports ----------------------
    wire            gtx6_gtxrxreset_i;
    wire            gtx6_pllrxreset_i;
    wire            gtx6_rxplllkdet_i;
    wire            gtx6_rxresetdone_i;


    //________________________________________________________________________
    //________________________________________________________________________
    //GTX7   (X0Y13)

    //----------------- Receive Ports - RX Data Path interface -----------------
    wire    [19:0]  gtx7_rxdata_i;
    wire            gtx7_rxrecclk_i;
    //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    wire    [2:0]   gtx7_rxeqmix_i;
    //---------------------- Receive Ports - RX PLL Ports ----------------------
    wire            gtx7_gtxrxreset_i;
    wire            gtx7_pllrxreset_i;
    wire            gtx7_rxplllkdet_i;
    wire            gtx7_rxresetdone_i;


    //________________________________________________________________________
    //________________________________________________________________________
    //GTX8   (X0Y15)

    //----------------- Receive Ports - RX Data Path interface -----------------
    wire    [19:0]  gtx8_rxdata_i;
    wire            gtx8_rxrecclk_i;
    //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    wire    [2:0]   gtx8_rxeqmix_i;
    //---------------------- Receive Ports - RX PLL Ports ----------------------
    wire            gtx8_gtxrxreset_i;
    wire            gtx8_pllrxreset_i;
    wire            gtx8_rxplllkdet_i;
    wire            gtx8_rxresetdone_i;


    //________________________________________________________________________
    //________________________________________________________________________
    //GTX9   (X0Y17)

    //----------------- Receive Ports - RX Data Path interface -----------------
    wire    [19:0]  gtx9_rxdata_i;
    wire            gtx9_rxrecclk_i;
    //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    wire    [2:0]   gtx9_rxeqmix_i;
    //---------------------- Receive Ports - RX PLL Ports ----------------------
    wire            gtx9_gtxrxreset_i;
    wire            gtx9_pllrxreset_i;
    wire            gtx9_rxplllkdet_i;
    wire            gtx9_rxresetdone_i;


    //________________________________________________________________________
    //________________________________________________________________________
    //GTX10   (X0Y19)

    //----------------- Receive Ports - RX Data Path interface -----------------
    wire    [19:0]  gtx10_rxdata_i;
    wire            gtx10_rxrecclk_i;
    //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    wire    [2:0]   gtx10_rxeqmix_i;
    //---------------------- Receive Ports - RX PLL Ports ----------------------
    wire            gtx10_gtxrxreset_i;
    wire            gtx10_pllrxreset_i;
    wire            gtx10_rxplllkdet_i;
    wire            gtx10_rxresetdone_i;




    //----------------------------- Global Signals -----------------------------
    wire            gtx0_tx_system_reset_c;
    wire            gtx0_rx_system_reset_c;
    wire            gtx1_tx_system_reset_c;
    wire            gtx1_rx_system_reset_c;
    wire            gtx2_tx_system_reset_c;
    wire            gtx2_rx_system_reset_c;
    wire            gtx3_tx_system_reset_c;
    wire            gtx3_rx_system_reset_c;
    wire            gtx4_tx_system_reset_c;
    wire            gtx4_rx_system_reset_c;
    wire            gtx5_tx_system_reset_c;
    wire            gtx5_rx_system_reset_c;
    wire            gtx6_tx_system_reset_c;
    wire            gtx6_rx_system_reset_c;
    wire            gtx7_tx_system_reset_c;
    wire            gtx7_rx_system_reset_c;
    wire            gtx8_tx_system_reset_c;
    wire            gtx8_rx_system_reset_c;
    wire            gtx9_tx_system_reset_c;
    wire            gtx9_rx_system_reset_c;
    wire            gtx10_tx_system_reset_c;
    wire            gtx10_rx_system_reset_c;
    wire            tied_to_ground_i;
    wire    [63:0]  tied_to_ground_vec_i;
    wire            tied_to_vcc_i;
    wire    [7:0]   tied_to_vcc_vec_i;
    wire            drp_clk_in_i;

    //--------------------------- User Clocks ---------------------------------
    wire            gtx0_rxusrclk2_i;
    wire            gtx1_rxusrclk2_i;
    wire            gtx2_rxusrclk2_i;
    wire            gtx3_rxusrclk2_i;
    wire            gtx4_rxusrclk2_i;
    wire            gtx5_rxusrclk2_i;
    wire            gtx6_rxusrclk2_i;
    wire            gtx7_rxusrclk2_i;
    wire            gtx8_rxusrclk2_i;
    wire            gtx9_rxusrclk2_i;
    wire            gtx10_rxusrclk2_i;


    //--------------------------- Reference Clocks ----------------------------
    
    wire            q1_clk1_refclk_i;
    
    wire            q4_clk1_refclk_i;
//**************************** Main Body of Code *******************************

    //  Static signal Assigments    
    assign tied_to_ground_i             = 1'b0;
    assign tied_to_ground_vec_i         = 64'h0000000000000000;
    assign tied_to_vcc_i                = 1'b1;
    assign tied_to_vcc_vec_i            = 8'hff;



    //---------------------Dedicated GTX Reference Clock Inputs ---------------
    // The dedicated reference clock inputs you selected in the GUI are implemented using
    // IBUFDS_GTXE1 instances.
    //
    // In the UCF file for this example design, you will see that each of
    // these IBUFDS_GTXE1 instances has been LOCed to a particular set of pins. By LOCing to these
    // locations, we tell the tools to use the dedicated input buffers to the GTX reference
    // clock network, rather than general purpose IOs. To select other pins, consult the 
    // Implementation chapter of UG___, or rerun the wizard.
    //
    // This network is the highest performace (lowest jitter) option for providing clocks
    // to the GTX transceivers.
    
    IBUFDS_GTXE1 q1_clk1_refclk_ibufds_i
    (
        .O                              (q1_clk1_refclk_i),
        .ODIV2                          (),
        .CEB                            (tied_to_ground_i),
        .I                              (Q1_CLK1_MGTREFCLK_PAD_P_IN),
        .IB                             (Q1_CLK1_MGTREFCLK_PAD_N_IN)
    );

 
    
    IBUFDS_GTXE1 q4_clk1_refclk_ibufds_i
    (
        .O                              (q4_clk1_refclk_i),
        .ODIV2                          (),
        .CEB                            (tied_to_ground_i),
        .I                              (Q4_CLK1_MGTREFCLK_PAD_P_IN),
        .IB                             (Q4_CLK1_MGTREFCLK_PAD_N_IN)
    );

 
    




    //--------------------------------- User Clocks ---------------------------
    
    // The clock resources in this section were added based on userclk source selections on
    // the Latency, Buffering, and Clocking page of the GUI. A few notes about user clocks:
    // * The userclk and userclk2 for each GTX datapath (TX and RX) must be phase aligned to 
    //   avoid data errors in the fabric interface whenever the datapath is wider than 10 bits
    // * To minimize clock resources, you can share clocks between GTXs. GTXs using the same frequency
    //   or multiples of the same frequency can be accomadated using MMCMs. Use caution when
    //   using RXRECCLK as a clock source, however - these clocks can typically only be shared if all
    //   the channels using the clock are receiving data from TX channels that share a reference clock 
    //   source with each other.

    BUFG rxrecclk_bufg0_i
    (
        .I                              (gtx0_rxrecclk_i),
        .O                              (gtx0_rxusrclk2_i)
    );


    BUFG rxrecclk_bufg1_i
    (
        .I                              (gtx1_rxrecclk_i),
        .O                              (gtx1_rxusrclk2_i)
    );


    BUFG rxrecclk_bufg2_i
    (
        .I                              (gtx2_rxrecclk_i),
        .O                              (gtx2_rxusrclk2_i)
    );


    BUFG rxrecclk_bufg3_i
    (
        .I                              (gtx3_rxrecclk_i),
        .O                              (gtx3_rxusrclk2_i)
    );


    BUFG rxrecclk_bufg4_i
    (
        .I                              (gtx4_rxrecclk_i),
        .O                              (gtx4_rxusrclk2_i)
    );


    BUFG rxrecclk_bufg5_i
    (
        .I                              (gtx5_rxrecclk_i),
        .O                              (gtx5_rxusrclk2_i)
    );


    BUFG rxrecclk_bufg6_i
    (
        .I                              (gtx6_rxrecclk_i),
        .O                              (gtx6_rxusrclk2_i)
    );


    BUFG rxrecclk_bufg7_i
    (
        .I                              (gtx7_rxrecclk_i),
        .O                              (gtx7_rxusrclk2_i)
    );


    BUFG rxrecclk_bufg8_i
    (
        .I                              (gtx8_rxrecclk_i),
        .O                              (gtx8_rxusrclk2_i)
    );


    BUFG rxrecclk_bufg9_i
    (
        .I                              (gtx9_rxrecclk_i),
        .O                              (gtx9_rxusrclk2_i)
    );


    BUFG rxrecclk_bufg10_i
    (
        .I                              (gtx10_rxrecclk_i),
        .O                              (gtx10_rxusrclk2_i)
    );






    //--------------------------- The GTX Wrapper -----------------------------
    
    // Use the instantiation template in the example directory to add the GTX wrapper to your design.
    // In this example, the wrapper is wired up for basic operation with a frame generator and frame 
    // checker. The GTXs will reset, then attempt to align and transmit data. If channel bonding is 
    // enabled, bonding should occur after alignment.
    
    GTX_GEM_RX #
    (
        .WRAPPER_SIM_GTXRESET_SPEEDUP   (EXAMPLE_SIM_GTXRESET_SPEEDUP)
    )
    GTX_GEM_RX_i
    (
 
 

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GTX0  (X0Y5)
        //----------------- Receive Ports - RX Data Path interface -----------------
        .GTX0_RXDATA_OUT                (gtx0_rxdata_i),
        .GTX0_RXRECCLK_OUT              (gtx0_rxrecclk_i),
        .GTX0_RXUSRCLK2_IN              (gtx0_rxusrclk2_i),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .GTX0_RXEQMIX_IN                (gtx0_rxeqmix_i),
        .GTX0_RXN_IN                    (RXN_IN[0]),
        .GTX0_RXP_IN                    (RXP_IN[0]),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTX0_GTXRXRESET_IN             (gtx0_gtxrxreset_i),
        .GTX0_MGTREFCLKRX_IN            (q1_clk1_refclk_i),
        .GTX0_PLLRXRESET_IN             (gtx0_pllrxreset_i),
        .GTX0_RXPLLLKDET_OUT            (gtx0_rxplllkdet_i),
        .GTX0_RXRESETDONE_OUT           (gtx0_rxresetdone_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GTX0_TXN_OUT                   (TXN_OUT[0]),
        .GTX0_TXP_OUT                   (TXP_OUT[0]),


 
 

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GTX1  (X0Y6)
        //----------------- Receive Ports - RX Data Path interface -----------------
        .GTX1_RXDATA_OUT                (gtx1_rxdata_i),
        .GTX1_RXRECCLK_OUT              (gtx1_rxrecclk_i),
        .GTX1_RXUSRCLK2_IN              (gtx1_rxusrclk2_i),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .GTX1_RXEQMIX_IN                (gtx1_rxeqmix_i),
        .GTX1_RXN_IN                    (RXN_IN[1]),
        .GTX1_RXP_IN                    (RXP_IN[1]),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTX1_GTXRXRESET_IN             (gtx1_gtxrxreset_i),
        .GTX1_MGTREFCLKRX_IN            (q1_clk1_refclk_i),
        .GTX1_PLLRXRESET_IN             (gtx1_pllrxreset_i),
        .GTX1_RXPLLLKDET_OUT            (gtx1_rxplllkdet_i),
        .GTX1_RXRESETDONE_OUT           (gtx1_rxresetdone_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GTX1_TXN_OUT                   (TXN_OUT[1]),
        .GTX1_TXP_OUT                   (TXP_OUT[1]),


 
 

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GTX2  (X0Y7)
        //----------------- Receive Ports - RX Data Path interface -----------------
        .GTX2_RXDATA_OUT                (gtx2_rxdata_i),
        .GTX2_RXRECCLK_OUT              (gtx2_rxrecclk_i),
        .GTX2_RXUSRCLK2_IN              (gtx2_rxusrclk2_i),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .GTX2_RXEQMIX_IN                (gtx2_rxeqmix_i),
        .GTX2_RXN_IN                    (RXN_IN[2]),
        .GTX2_RXP_IN                    (RXP_IN[2]),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTX2_GTXRXRESET_IN             (gtx2_gtxrxreset_i),
        .GTX2_MGTREFCLKRX_IN            (q1_clk1_refclk_i),
        .GTX2_PLLRXRESET_IN             (gtx2_pllrxreset_i),
        .GTX2_RXPLLLKDET_OUT            (gtx2_rxplllkdet_i),
        .GTX2_RXRESETDONE_OUT           (gtx2_rxresetdone_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GTX2_TXN_OUT                   (TXN_OUT[2]),
        .GTX2_TXP_OUT                   (TXP_OUT[2]),


 
 

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GTX3  (X0Y8)
        //----------------- Receive Ports - RX Data Path interface -----------------
        .GTX3_RXDATA_OUT                (gtx3_rxdata_i),
        .GTX3_RXRECCLK_OUT              (gtx3_rxrecclk_i),
        .GTX3_RXUSRCLK2_IN              (gtx3_rxusrclk2_i),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .GTX3_RXEQMIX_IN                (gtx3_rxeqmix_i),
        .GTX3_RXN_IN                    (RXN_IN[3]),
        .GTX3_RXP_IN                    (RXP_IN[3]),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTX3_GTXRXRESET_IN             (gtx3_gtxrxreset_i),
        .GTX3_MGTREFCLKRX_IN            (q1_clk1_refclk_i),
        .GTX3_PLLRXRESET_IN             (gtx3_pllrxreset_i),
        .GTX3_RXPLLLKDET_OUT            (gtx3_rxplllkdet_i),
        .GTX3_RXRESETDONE_OUT           (gtx3_rxresetdone_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GTX3_TXN_OUT                   (TXN_OUT[3]),
        .GTX3_TXP_OUT                   (TXP_OUT[3]),


 
 

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GTX4  (X0Y9)
        //----------------- Receive Ports - RX Data Path interface -----------------
        .GTX4_RXDATA_OUT                (gtx4_rxdata_i),
        .GTX4_RXRECCLK_OUT              (gtx4_rxrecclk_i),
        .GTX4_RXUSRCLK2_IN              (gtx4_rxusrclk2_i),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .GTX4_RXEQMIX_IN                (gtx4_rxeqmix_i),
        .GTX4_RXN_IN                    (RXN_IN[4]),
        .GTX4_RXP_IN                    (RXP_IN[4]),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTX4_GTXRXRESET_IN             (gtx4_gtxrxreset_i),
        .GTX4_MGTREFCLKRX_IN            (q1_clk1_refclk_i),
        .GTX4_PLLRXRESET_IN             (gtx4_pllrxreset_i),
        .GTX4_RXPLLLKDET_OUT            (gtx4_rxplllkdet_i),
        .GTX4_RXRESETDONE_OUT           (gtx4_rxresetdone_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GTX4_TXN_OUT                   (TXN_OUT[4]),
        .GTX4_TXP_OUT                   (TXP_OUT[4]),


 
 

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GTX5  (X0Y10)
        //----------------- Receive Ports - RX Data Path interface -----------------
        .GTX5_RXDATA_OUT                (gtx5_rxdata_i),
        .GTX5_RXRECCLK_OUT              (gtx5_rxrecclk_i),
        .GTX5_RXUSRCLK2_IN              (gtx5_rxusrclk2_i),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .GTX5_RXEQMIX_IN                (gtx5_rxeqmix_i),
        .GTX5_RXN_IN                    (RXN_IN[5]),
        .GTX5_RXP_IN                    (RXP_IN[5]),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTX5_GTXRXRESET_IN             (gtx5_gtxrxreset_i),
        .GTX5_MGTREFCLKRX_IN            (q1_clk1_refclk_i),
        .GTX5_PLLRXRESET_IN             (gtx5_pllrxreset_i),
        .GTX5_RXPLLLKDET_OUT            (gtx5_rxplllkdet_i),
        .GTX5_RXRESETDONE_OUT           (gtx5_rxresetdone_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GTX5_TXN_OUT                   (TXN_OUT[5]),
        .GTX5_TXP_OUT                   (TXP_OUT[5]),


 
 

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GTX6  (X0Y11)
        //----------------- Receive Ports - RX Data Path interface -----------------
        .GTX6_RXDATA_OUT                (gtx6_rxdata_i),
        .GTX6_RXRECCLK_OUT              (gtx6_rxrecclk_i),
        .GTX6_RXUSRCLK2_IN              (gtx6_rxusrclk2_i),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .GTX6_RXEQMIX_IN                (gtx6_rxeqmix_i),
        .GTX6_RXN_IN                    (RXN_IN[6]),
        .GTX6_RXP_IN                    (RXP_IN[6]),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTX6_GTXRXRESET_IN             (gtx6_gtxrxreset_i),
        .GTX6_MGTREFCLKRX_IN            (q1_clk1_refclk_i),
        .GTX6_PLLRXRESET_IN             (gtx6_pllrxreset_i),
        .GTX6_RXPLLLKDET_OUT            (gtx6_rxplllkdet_i),
        .GTX6_RXRESETDONE_OUT           (gtx6_rxresetdone_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GTX6_TXN_OUT                   (TXN_OUT[6]),
        .GTX6_TXP_OUT                   (TXP_OUT[6]),


 
 

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GTX7  (X0Y13)
        //----------------- Receive Ports - RX Data Path interface -----------------
        .GTX7_RXDATA_OUT                (gtx7_rxdata_i),
        .GTX7_RXRECCLK_OUT              (gtx7_rxrecclk_i),
        .GTX7_RXUSRCLK2_IN              (gtx7_rxusrclk2_i),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .GTX7_RXEQMIX_IN                (gtx7_rxeqmix_i),
        .GTX7_RXN_IN                    (RXN_IN[7]),
        .GTX7_RXP_IN                    (RXP_IN[7]),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTX7_GTXRXRESET_IN             (gtx7_gtxrxreset_i),
        .GTX7_MGTREFCLKRX_IN            (q4_clk1_refclk_i),
        .GTX7_PLLRXRESET_IN             (gtx7_pllrxreset_i),
        .GTX7_RXPLLLKDET_OUT            (gtx7_rxplllkdet_i),
        .GTX7_RXRESETDONE_OUT           (gtx7_rxresetdone_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GTX7_TXN_OUT                   (TXN_OUT[7]),
        .GTX7_TXP_OUT                   (TXP_OUT[7]),


 
 

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GTX8  (X0Y15)
        //----------------- Receive Ports - RX Data Path interface -----------------
        .GTX8_RXDATA_OUT                (gtx8_rxdata_i),
        .GTX8_RXRECCLK_OUT              (gtx8_rxrecclk_i),
        .GTX8_RXUSRCLK2_IN              (gtx8_rxusrclk2_i),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .GTX8_RXEQMIX_IN                (gtx8_rxeqmix_i),
        .GTX8_RXN_IN                    (RXN_IN[8]),
        .GTX8_RXP_IN                    (RXP_IN[8]),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTX8_GTXRXRESET_IN             (gtx8_gtxrxreset_i),
        .GTX8_MGTREFCLKRX_IN            (q4_clk1_refclk_i),
        .GTX8_PLLRXRESET_IN             (gtx8_pllrxreset_i),
        .GTX8_RXPLLLKDET_OUT            (gtx8_rxplllkdet_i),
        .GTX8_RXRESETDONE_OUT           (gtx8_rxresetdone_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GTX8_TXN_OUT                   (TXN_OUT[8]),
        .GTX8_TXP_OUT                   (TXP_OUT[8]),


 
 

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GTX9  (X0Y17)
        //----------------- Receive Ports - RX Data Path interface -----------------
        .GTX9_RXDATA_OUT                (gtx9_rxdata_i),
        .GTX9_RXRECCLK_OUT              (gtx9_rxrecclk_i),
        .GTX9_RXUSRCLK2_IN              (gtx9_rxusrclk2_i),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .GTX9_RXEQMIX_IN                (gtx9_rxeqmix_i),
        .GTX9_RXN_IN                    (RXN_IN[9]),
        .GTX9_RXP_IN                    (RXP_IN[9]),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTX9_GTXRXRESET_IN             (gtx9_gtxrxreset_i),
        .GTX9_MGTREFCLKRX_IN            (q4_clk1_refclk_i),
        .GTX9_PLLRXRESET_IN             (gtx9_pllrxreset_i),
        .GTX9_RXPLLLKDET_OUT            (gtx9_rxplllkdet_i),
        .GTX9_RXRESETDONE_OUT           (gtx9_rxresetdone_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GTX9_TXN_OUT                   (TXN_OUT[9]),
        .GTX9_TXP_OUT                   (TXP_OUT[9]),


 
 

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GTX10  (X0Y19)
        //----------------- Receive Ports - RX Data Path interface -----------------
        .GTX10_RXDATA_OUT               (gtx10_rxdata_i),
        .GTX10_RXRECCLK_OUT             (gtx10_rxrecclk_i),
        .GTX10_RXUSRCLK2_IN             (gtx10_rxusrclk2_i),
        //----- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
        .GTX10_RXEQMIX_IN               (gtx10_rxeqmix_i),
        .GTX10_RXN_IN                   (RXN_IN[10]),
        .GTX10_RXP_IN                   (RXP_IN[10]),
        //---------------------- Receive Ports - RX PLL Ports ----------------------
        .GTX10_GTXRXRESET_IN            (gtx10_gtxrxreset_i),
        .GTX10_MGTREFCLKRX_IN           (q4_clk1_refclk_i),
        .GTX10_PLLRXRESET_IN            (gtx10_pllrxreset_i),
        .GTX10_RXPLLLKDET_OUT           (gtx10_rxplllkdet_i),
        .GTX10_RXRESETDONE_OUT          (gtx10_rxresetdone_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GTX10_TXN_OUT                  (TXN_OUT[10]),
        .GTX10_TXP_OUT                  (TXP_OUT[10])


    );







    //------------------------ User Module Resets -----------------------------
    // All the User Modules i.e. FRAME_GEN, FRAME_CHECK and the sync modules
    // are held in reset till the RESETDONE goes high. 
    // The RESETDONE is registered a couple of times on *USRCLK2 and connected 
    // to the reset of the modules
    

    always @(posedge gtx0_rxusrclk2_i)
            gtx0_rxresetdone_i_r   <=   `DLY gtx0_rxresetdone_i;

    always @(posedge gtx0_rxusrclk2_i or negedge gtx0_rxresetdone_i_r)

    begin
        if (!gtx0_rxresetdone_i_r)
        begin
            gtx0_rxresetdone_r      <=   `DLY 1'b0;
            gtx0_rxresetdone_r2     <=   `DLY 1'b0;
        end
        else
        begin
            gtx0_rxresetdone_r      <=   `DLY gtx0_rxresetdone_i_r;
            gtx0_rxresetdone_r2     <=   `DLY gtx0_rxresetdone_r;
        end
    end

    always @(posedge gtx0_rxusrclk2_i)
            gtx0_rxresetdone_r3   <=   `DLY gtx0_rxresetdone_r2;
    

    always @(posedge gtx1_rxusrclk2_i)
            gtx1_rxresetdone_i_r   <=   `DLY gtx1_rxresetdone_i;

    always @(posedge gtx1_rxusrclk2_i or negedge gtx1_rxresetdone_i_r)

    begin
        if (!gtx1_rxresetdone_i_r)
        begin
            gtx1_rxresetdone_r      <=   `DLY 1'b0;
            gtx1_rxresetdone_r2     <=   `DLY 1'b0;
        end
        else
        begin
            gtx1_rxresetdone_r      <=   `DLY gtx1_rxresetdone_i_r;
            gtx1_rxresetdone_r2     <=   `DLY gtx1_rxresetdone_r;
        end
    end

    always @(posedge gtx1_rxusrclk2_i)
            gtx1_rxresetdone_r3   <=   `DLY gtx1_rxresetdone_r2;
    

    always @(posedge gtx2_rxusrclk2_i)
            gtx2_rxresetdone_i_r   <=   `DLY gtx2_rxresetdone_i;

    always @(posedge gtx2_rxusrclk2_i or negedge gtx2_rxresetdone_i_r)

    begin
        if (!gtx2_rxresetdone_i_r)
        begin
            gtx2_rxresetdone_r      <=   `DLY 1'b0;
            gtx2_rxresetdone_r2     <=   `DLY 1'b0;
        end
        else
        begin
            gtx2_rxresetdone_r      <=   `DLY gtx2_rxresetdone_i_r;
            gtx2_rxresetdone_r2     <=   `DLY gtx2_rxresetdone_r;
        end
    end

    always @(posedge gtx2_rxusrclk2_i)
            gtx2_rxresetdone_r3   <=   `DLY gtx2_rxresetdone_r2;
    

    always @(posedge gtx3_rxusrclk2_i)
            gtx3_rxresetdone_i_r   <=   `DLY gtx3_rxresetdone_i;

    always @(posedge gtx3_rxusrclk2_i or negedge gtx3_rxresetdone_i_r)

    begin
        if (!gtx3_rxresetdone_i_r)
        begin
            gtx3_rxresetdone_r      <=   `DLY 1'b0;
            gtx3_rxresetdone_r2     <=   `DLY 1'b0;
        end
        else
        begin
            gtx3_rxresetdone_r      <=   `DLY gtx3_rxresetdone_i_r;
            gtx3_rxresetdone_r2     <=   `DLY gtx3_rxresetdone_r;
        end
    end

    always @(posedge gtx3_rxusrclk2_i)
            gtx3_rxresetdone_r3   <=   `DLY gtx3_rxresetdone_r2;
    

    always @(posedge gtx4_rxusrclk2_i)
            gtx4_rxresetdone_i_r   <=   `DLY gtx4_rxresetdone_i;

    always @(posedge gtx4_rxusrclk2_i or negedge gtx4_rxresetdone_i_r)

    begin
        if (!gtx4_rxresetdone_i_r)
        begin
            gtx4_rxresetdone_r      <=   `DLY 1'b0;
            gtx4_rxresetdone_r2     <=   `DLY 1'b0;
        end
        else
        begin
            gtx4_rxresetdone_r      <=   `DLY gtx4_rxresetdone_i_r;
            gtx4_rxresetdone_r2     <=   `DLY gtx4_rxresetdone_r;
        end
    end

    always @(posedge gtx4_rxusrclk2_i)
            gtx4_rxresetdone_r3   <=   `DLY gtx4_rxresetdone_r2;
    

    always @(posedge gtx5_rxusrclk2_i)
            gtx5_rxresetdone_i_r   <=   `DLY gtx5_rxresetdone_i;

    always @(posedge gtx5_rxusrclk2_i or negedge gtx5_rxresetdone_i_r)

    begin
        if (!gtx5_rxresetdone_i_r)
        begin
            gtx5_rxresetdone_r      <=   `DLY 1'b0;
            gtx5_rxresetdone_r2     <=   `DLY 1'b0;
        end
        else
        begin
            gtx5_rxresetdone_r      <=   `DLY gtx5_rxresetdone_i_r;
            gtx5_rxresetdone_r2     <=   `DLY gtx5_rxresetdone_r;
        end
    end

    always @(posedge gtx5_rxusrclk2_i)
            gtx5_rxresetdone_r3   <=   `DLY gtx5_rxresetdone_r2;
    

    always @(posedge gtx6_rxusrclk2_i)
            gtx6_rxresetdone_i_r   <=   `DLY gtx6_rxresetdone_i;

    always @(posedge gtx6_rxusrclk2_i or negedge gtx6_rxresetdone_i_r)

    begin
        if (!gtx6_rxresetdone_i_r)
        begin
            gtx6_rxresetdone_r      <=   `DLY 1'b0;
            gtx6_rxresetdone_r2     <=   `DLY 1'b0;
        end
        else
        begin
            gtx6_rxresetdone_r      <=   `DLY gtx6_rxresetdone_i_r;
            gtx6_rxresetdone_r2     <=   `DLY gtx6_rxresetdone_r;
        end
    end

    always @(posedge gtx6_rxusrclk2_i)
            gtx6_rxresetdone_r3   <=   `DLY gtx6_rxresetdone_r2;
    

    always @(posedge gtx7_rxusrclk2_i)
            gtx7_rxresetdone_i_r   <=   `DLY gtx7_rxresetdone_i;

    always @(posedge gtx7_rxusrclk2_i or negedge gtx7_rxresetdone_i_r)

    begin
        if (!gtx7_rxresetdone_i_r)
        begin
            gtx7_rxresetdone_r      <=   `DLY 1'b0;
            gtx7_rxresetdone_r2     <=   `DLY 1'b0;
        end
        else
        begin
            gtx7_rxresetdone_r      <=   `DLY gtx7_rxresetdone_i_r;
            gtx7_rxresetdone_r2     <=   `DLY gtx7_rxresetdone_r;
        end
    end

    always @(posedge gtx7_rxusrclk2_i)
            gtx7_rxresetdone_r3   <=   `DLY gtx7_rxresetdone_r2;
    

    always @(posedge gtx8_rxusrclk2_i)
            gtx8_rxresetdone_i_r   <=   `DLY gtx8_rxresetdone_i;

    always @(posedge gtx8_rxusrclk2_i or negedge gtx8_rxresetdone_i_r)

    begin
        if (!gtx8_rxresetdone_i_r)
        begin
            gtx8_rxresetdone_r      <=   `DLY 1'b0;
            gtx8_rxresetdone_r2     <=   `DLY 1'b0;
        end
        else
        begin
            gtx8_rxresetdone_r      <=   `DLY gtx8_rxresetdone_i_r;
            gtx8_rxresetdone_r2     <=   `DLY gtx8_rxresetdone_r;
        end
    end

    always @(posedge gtx8_rxusrclk2_i)
            gtx8_rxresetdone_r3   <=   `DLY gtx8_rxresetdone_r2;
    

    always @(posedge gtx9_rxusrclk2_i)
            gtx9_rxresetdone_i_r   <=   `DLY gtx9_rxresetdone_i;

    always @(posedge gtx9_rxusrclk2_i or negedge gtx9_rxresetdone_i_r)

    begin
        if (!gtx9_rxresetdone_i_r)
        begin
            gtx9_rxresetdone_r      <=   `DLY 1'b0;
            gtx9_rxresetdone_r2     <=   `DLY 1'b0;
        end
        else
        begin
            gtx9_rxresetdone_r      <=   `DLY gtx9_rxresetdone_i_r;
            gtx9_rxresetdone_r2     <=   `DLY gtx9_rxresetdone_r;
        end
    end

    always @(posedge gtx9_rxusrclk2_i)
            gtx9_rxresetdone_r3   <=   `DLY gtx9_rxresetdone_r2;
    

    always @(posedge gtx10_rxusrclk2_i)
            gtx10_rxresetdone_i_r   <=   `DLY gtx10_rxresetdone_i;

    always @(posedge gtx10_rxusrclk2_i or negedge gtx10_rxresetdone_i_r)

    begin
        if (!gtx10_rxresetdone_i_r)
        begin
            gtx10_rxresetdone_r      <=   `DLY 1'b0;
            gtx10_rxresetdone_r2     <=   `DLY 1'b0;
        end
        else
        begin
            gtx10_rxresetdone_r      <=   `DLY gtx10_rxresetdone_i_r;
            gtx10_rxresetdone_r2     <=   `DLY gtx10_rxresetdone_r;
        end
    end

    always @(posedge gtx10_rxusrclk2_i)
            gtx10_rxresetdone_r3   <=   `DLY gtx10_rxresetdone_r2;
    
    // from the top level ports
    assign  gtx0_gtxrxreset_i = GTXRXRESET_IN;
    assign  gtx1_gtxrxreset_i = GTXRXRESET_IN;
    assign  gtx2_gtxrxreset_i = GTXRXRESET_IN;
    assign  gtx3_gtxrxreset_i = GTXRXRESET_IN;
    assign  gtx4_gtxrxreset_i = GTXRXRESET_IN;
    assign  gtx5_gtxrxreset_i = GTXRXRESET_IN;
    assign  gtx6_gtxrxreset_i = GTXRXRESET_IN;
    assign  gtx7_gtxrxreset_i = GTXRXRESET_IN;
    assign  gtx8_gtxrxreset_i = GTXRXRESET_IN;
    assign  gtx9_gtxrxreset_i = GTXRXRESET_IN;
    assign  gtx10_gtxrxreset_i = GTXRXRESET_IN;

    // assign resets for frame_gen modules

    // assign resets for frame_check modules
    assign  gtx0_rx_system_reset_c = !gtx0_rxresetdone_r3;
    assign  gtx1_rx_system_reset_c = !gtx1_rxresetdone_r3;
    assign  gtx2_rx_system_reset_c = !gtx2_rxresetdone_r3;
    assign  gtx3_rx_system_reset_c = !gtx3_rxresetdone_r3;
    assign  gtx4_rx_system_reset_c = !gtx4_rxresetdone_r3;
    assign  gtx5_rx_system_reset_c = !gtx5_rxresetdone_r3;
    assign  gtx6_rx_system_reset_c = !gtx6_rxresetdone_r3;
    assign  gtx7_rx_system_reset_c = !gtx7_rxresetdone_r3;
    assign  gtx8_rx_system_reset_c = !gtx8_rxresetdone_r3;
    assign  gtx9_rx_system_reset_c = !gtx9_rxresetdone_r3;
    assign  gtx10_rx_system_reset_c = !gtx10_rxresetdone_r3;

    assign  gtxrxreset_i                         =  tied_to_ground_i;
    assign  user_tx_reset_i                      =  tied_to_ground_i;
    assign  user_rx_reset_i                      =  tied_to_ground_i;
    assign  mux_sel_i                            =  tied_to_ground_vec_i[3:0];
    assign  gtx0_pllrxreset_i                    =  tied_to_ground_i;
    assign  gtx0_rxeqmix_i                       =  tied_to_ground_vec_i[2:0];
    assign  gtx1_pllrxreset_i                    =  tied_to_ground_i;
    assign  gtx1_rxeqmix_i                       =  tied_to_ground_vec_i[2:0];
    assign  gtx2_pllrxreset_i                    =  tied_to_ground_i;
    assign  gtx2_rxeqmix_i                       =  tied_to_ground_vec_i[2:0];
    assign  gtx3_pllrxreset_i                    =  tied_to_ground_i;
    assign  gtx3_rxeqmix_i                       =  tied_to_ground_vec_i[2:0];
    assign  gtx4_pllrxreset_i                    =  tied_to_ground_i;
    assign  gtx4_rxeqmix_i                       =  tied_to_ground_vec_i[2:0];
    assign  gtx5_pllrxreset_i                    =  tied_to_ground_i;
    assign  gtx5_rxeqmix_i                       =  tied_to_ground_vec_i[2:0];
    assign  gtx6_pllrxreset_i                    =  tied_to_ground_i;
    assign  gtx6_rxeqmix_i                       =  tied_to_ground_vec_i[2:0];
    assign  gtx7_pllrxreset_i                    =  tied_to_ground_i;
    assign  gtx7_rxeqmix_i                       =  tied_to_ground_vec_i[2:0];
    assign  gtx8_pllrxreset_i                    =  tied_to_ground_i;
    assign  gtx8_rxeqmix_i                       =  tied_to_ground_vec_i[2:0];
    assign  gtx9_pllrxreset_i                    =  tied_to_ground_i;
    assign  gtx9_rxeqmix_i                       =  tied_to_ground_vec_i[2:0];
    assign  gtx10_pllrxreset_i                   =  tied_to_ground_i;
    assign  gtx10_rxeqmix_i                      =  tied_to_ground_vec_i[2:0];




endmodule
